@model IEnumerable<ShoppingApplication.Models.CartItem>

@{
    ViewBag.Title = "Cart";
}

<h2>Shopping Cart</h2>

<table class="table">
    <tr>
        <th>Product ID</th>
        <th>Product Name</th>
        <th>
            @Html.DisplayNameFor(model => model.Quantity)
        </th>
        <th>Price</th>
        <th>Amount</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>@item.Product.Id</td>
            <td>@item.Product.Name</td>

            <td>
                <input id="quantity_@item.Product.Id" name="quantity_@item.Product.Id" type="number" min="1" value="@item.Quantity" onchange="updateTotal(@item.Product.Id)" style="width:35px" />
            </td>
            <td>@item.Product.Price</td>
            <td id="total_@item.Product.Id">@(item.Product.Price * item.Quantity)</td>
            @*<td>
                @Html.ActionLink("Remove", "RemoveFromCart", new { productId = item.Product.Id })
            </td>*@
        </tr>
    }
</table>
<div style="font-size: x-large">
    Total Price: <span id="overallTotal">@Model.Sum(item => item.Product.Price * item.Quantity)</span>
</div>
<br/>
<td>
    <a href="@Url.Action("Checkout", "Products")" class="btn btn-primary">Checkout</a>
</td>


<script>
    function updateTotal(productId) {
        var quantityInput = document.getElementById("quantity_" + productId);
        var totalCell = document.getElementById("total_" + productId);
        var price = parseFloat(totalCell.previousElementSibling.innerText);
        var quantity = parseInt(quantityInput.value);
        var amount = price * quantity;
        totalCell.innerText = amount;
        updateOverallTotal();
    }

    function updateOverallTotal() {
        var overallTotal = 0;
        var totalCells = document.querySelectorAll("[id^='total_']");

        totalCells.forEach(function (totalCell) {
            overallTotal += parseFloat(totalCell.innerText);
        });

        document.getElementById("overallTotal").innerText = overallTotal;
    }
</script>